<?php

namespace App\Filament\Resources;

use App\Filament\Resources\RekapPerhitunganResource\Pages;
use App\Models\Pegawai;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables\Table; // Import ini bisa dihapus jika tidak ada method table()
use Filament\Navigation\NavigationGroup;
use Filament\Navigation\NavigationItem;

class RekapPerhitunganResource extends Resource
{
    protected static ?string $model = Pegawai::class;
    protected static ?string $navigationIcon = 'heroicon-o-calculator';
    protected static ?string $navigationLabel = 'Perhitungan TPP';
    protected static ?int $navigationSort = 3;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                //
            ]);
    }

    // --- BAGIAN INI DIHAPUS / DIKOMENTARI ---
    /*
    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                //
            ])
            ->filters([
                //
            ])
            ->actions([
                //
            ])
            ->bulkActions([
                //
            ]);
    }
    */
    // --- AKHIR BAGIAN DIHAPUS / DIKOMENTARI ---

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListRekapPerhitungans::route('/'),
        ];
    }

    // Otorisasi: Superadmin bisa melihat semua, Operator hanya kantornya sendiri
    public static function canViewAny(): bool
    {
        $user = auth()->user();

        // Mengganti hasRole() dengan perbandingan langsung ke kolom 'role'
        return in_array($user->role, ['superadmin', 'admin', 'operator']);
    }

    public static function canCreate(): bool
    {
        return false;
    }

    public static function canEdit($record): bool
    {
        return false;
    }

    public static function canDelete($record): bool
    {
        return false;
    }

    public static function canDeleteAny(): bool
    {
        return false;
    }

    public static function getGloballySearchableAttributes(): array
    {
        return [];
    }
}